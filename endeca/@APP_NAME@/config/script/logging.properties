#
# Copyright 2001, 2014, Oracle and/or its affiliates. All rights reserved.
# Oracle and Java are registered trademarks of Oracle and/or its
# affiliates. Other names may be trademarks of their respective owners.
# UNIX is a registered trademark of The Open Group.
#
# This software and related documentation are provided under a license
# agreement containing restrictions on use and disclosure and are
# protected by intellectual property laws. Except as expressly permitted
# in your license agreement or allowed by law, you may not use, copy,
# reproduce, translate, broadcast, modify, license, transmit, distribute,
# exhibit, perform, publish, or display any part, in any form, or by any
# means. Reverse engineering, disassembly, or decompilation of this
# software, unless required by law for interoperability, is prohibited.
# The information contained herein is subject to change without notice
# and is not warranted to be error-free. If you find any errors, please
# report them to us in writing.
# U.S. GOVERNMENT END USERS: Oracle programs, including any operating
# system, integrated software, any programs installed on the hardware,
# and/or documentation, delivered to U.S. Government end users are
# "commercial computer software" pursuant to the applicable Federal
# Acquisition Regulation and agency-specific supplemental regulations.
# As such, use, duplication, disclosure, modification, and adaptation
# of the programs, including any operating system, integrated software,
# any programs installed on the hardware, and/or documentation, shall be
# subject to license terms and license restrictions applicable to the
# programs. No other rights are granted to the U.S. Government.
# This software or hardware is developed for general use in a variety
# of information management applications. It is not developed or
# intended for use in any inherently dangerous applications, including
# applications that may create a risk of personal injury. If you use
# this software or hardware in dangerous applications, then you shall
# be responsible to take all appropriate fail-safe, backup, redundancy,
# and other measures to ensure its safe use. Oracle Corporation and its
# affiliates disclaim any liability for any damages caused by use of this
# software or hardware in dangerous applications.
# This software or hardware and documentation may provide access to or
# information on content, products, and services from third parties.
# Oracle Corporation and its affiliates are not responsible for and
# expressly disclaim all warranties of any kind with respect to
# third-party content, products, and services. Oracle Corporation and
# its affiliates will not be responsible for any loss, costs, or damages
# incurred due to your access to or use of third-party content, products,
# or services.
#

# Global logging properties.
# ------------------------------------------
handlers=java.util.logging.ConsoleHandler, com.endeca.soleng.eac.toolkit.logging.RelativePathFileHandler
# Default global logging level.
.level=CONFIG

# Package/Logger Settings
# ------------------------------------------
org.apache.cxf.level=WARNING
org.springframework.level=WARNING
com.endeca.soleng.eac.toolkit.level=ALL
com.endeca.usage.level=WARNING

# Handler Settings
# -----------------------------------------

# ConsoleHandler
java.util.logging.ConsoleHandler.level=INFO
java.util.logging.ConsoleHandler.formatter=com.endeca.soleng.eac.toolkit.logging.ConsoleFormatter

# RelativePathFileHandler

# generates log file of size(in bytes) specified with limit parameter. 
# In java.util.logging.FileHandler this is assigned to an int value, so at any time if its value exceeds int upper limit, default value (i.e., 0) would be taken
#If log file size has reached this limit, it recycles through multiple files till file count is reached.
#If max count has reached, the oldest log file's content would be overwritten by that of previous log.
#Log file rotation works the following way:
    #<app-name>.0.0.log is the latest and current log always
    #if <app-name>.0.0.log is full, then the contents of <app-name>.0.0.log are copied to <app-name>.0.1.log.
    #if <app-name>.0.0.log is full again, then <app-name>.0.1.log is copied to <app-name>.0.2.log and <app-name>.0.0.log is copied to <app-name>0.1.log
    #the above logic is applied till <app-name>.0.9.log is created (assuming count=10)
    #after this if <app-name>.0.0.log is full, then <app-name>.0.9.log file will be overwritten by <app-name>.0.8.log.
    #hence if the customer wants to retain logs, regular backups should be taken
	#So at any given time <app-name>.0.0.log is the latest log file

# com.endeca.soleng.eac.toolkit.logging.RelativePathFileHandler.limit is the log size in bytes.
#com.endeca.soleng.eac.toolkit.logging.RelativePathFileHandler.count is the no of log files that will be created.

com.endeca.soleng.eac.toolkit.logging.RelativePathFileHandler.append=true
com.endeca.soleng.eac.toolkit.logging.RelativePathFileHandler.level=CONFIG
com.endeca.soleng.eac.toolkit.logging.RelativePathFileHandler.pattern=logs/@APP_NAME@.%u.%g.log
com.endeca.soleng.eac.toolkit.logging.RelativePathFileHandler.limit=10000000
com.endeca.soleng.eac.toolkit.logging.RelativePathFileHandler.count=10
com.endeca.soleng.eac.toolkit.logging.RelativePathFileHandler.formatter=java.util.logging.SimpleFormatter

