<project name="core_update" default="liquibase-update" basedir=".">

  <import file="${basedir}/../../liquibase_includes.xml" />
  
  
  <target name="liquibase-update">
    <antcall target="-update-core-oms">
      <param name="update-core-oms.command" value="liquibase_includes.liquibase-execute-changelog"/>
    </antcall>
  </target>
  
  <target name="liquibase-update-staging">
    <antcall target="-update-core-staging">
      <param name="update-core-oms.command" value="liquibase_includes.liquibase-execute-changelog"/>
    </antcall>
  </target>
	
	<target name="liquibase-rollback-with-tag">
			<antcall target="-rollback-with-tag-core-oms">
			   <param name="rollback-with-tag.command" value="liquibase_includes.liquibase-rollback-changelog"/>
			   <param name="rollback-with-tag.tagId" value="${rollback-tagId}" />
			</antcall>
	</target>
	
	<target name="liquibase-rollback-with-tag-staging">
			<antcall target="-rollback-with-tag-staging-core">
			   <param name="rollback-with-tag.command" value="liquibase_includes.liquibase-rollback-changelog"/>
			   <param name="rollback-with-tag.tagId" value="${rollback-tagId}" />
			</antcall>
	</target>
	
	<target name="liquibase-rollback-with-count">
			<antcall target="-rollback-with-count-core">
			   <param name="rollback-with-count.command" value="liquibase_includes.liquibase-rollback-changelog-count"/>
			   <param name="rollback-with-count.count" value="${rollback-count}" />
			</antcall>
		</target>
	
	<target name="liquibase-rollback-with-count-staging">
			<antcall target="-rollback-with-count-staging-core">
			   <param name="rollback-with-count.command" value="liquibase_includes.liquibase-rollback-changelog-count"/>
			   <param name="rollback-with-count.count" value="${rollback-count}" />
			</antcall>
		</target>
	  
  <target name="-update-core-oms">
    <fail unless="update-core-oms.command">update-core-oms.command is not set</fail>

    <!-- constants get installed in system and catfeed -->
    <for list="core-db,oms-db" param="liquibase.dbref">
      <sequential>
         <antcall target="${update-core-oms.command}">
            <param name="liquibase.changelog" value="master_core_oms_changelog.xml" />
            <param name="liquibase.dbref" value="@{liquibase.dbref}" />
         </antcall>
      </sequential>
    </for>

  </target>
  
   <target name="-update-core-staging">
    <fail unless="update-core-oms.command">update-core-oms.command is not set</fail>

    <!-- constants get installed in system and catfeed -->
    <for list="stage-core-db" param="liquibase.dbref">
      <sequential>
         <antcall target="${update-core-oms.command}">
            <param name="liquibase.changelog" value="master_core_oms_changelog.xml" />
            <param name="liquibase.dbref" value="@{liquibase.dbref}" />
         </antcall>
      </sequential>
    </for>

  </target>

	<target name="-rollback-with-tag-core-oms">
	    <fail unless="rollback-with-tag.command">rollback-with-tag.command is not set</fail>
		<fail unless="rollback-with-tag.tagId">rollback-with-tag.tagId is not set</fail>
	
	    <!-- constants get installed in system and catfeed -->
	    <for list="core-db,oms-db" param="liquibase.dbref">
	      <sequential>
	         <antcall target="${rollback-with-tag.command}">
	            <param name="liquibase.changelog" value="master_core_oms_changelog.xml" />
	            <param name="liquibase.dbref" value="@{liquibase.dbref}" />
	         	<param name="liquibase.rollbackTag" value="${rollback-with-tag.tagId}"/>
	         </antcall>
	      </sequential>
	    </for>
	
	</target>
	
	<target name="-rollback-with-tag-staging-core">
		    <fail unless="rollback-with-tag.command">rollback-with-tag.command is not set</fail>
			<fail unless="rollback-with-tag.tagId">rollback-with-tag.tagId is not set</fail>
		
		    <!-- constants get installed in system and catfeed -->
		    <for list="stage-core-db" param="liquibase.dbref">
		      <sequential>
		         <antcall target="${rollback-with-tag.command}">
		            <param name="liquibase.changelog" value="master_core_oms_changelog.xml" />
		            <param name="liquibase.dbref" value="@{liquibase.dbref}" />
		         	<param name="liquibase.rollbackTag" value="${rollback-with-tag.tagId}"/>
		         </antcall>
		      </sequential>
		    </for>
		
		</target>
	
		<target name="-rollback-with-count-core">
		    <fail unless="rollback-with-count.command">rollback-with-count.command is not set</fail>
			<fail unless="rollback-with-count.count">rollback-with-count.count is not set</fail>
		
		    <!-- constants get installed in system and catfeed -->
		    <for list="core-db,oms-db" param="liquibase.dbref">
		      <sequential>
		         <antcall target="${rollback-with-count.command}">
		            <param name="liquibase.changelog" value="master_core_oms_changelog.xml" />
		            <param name="liquibase.dbref" value="@{liquibase.dbref}" />
		         	<param name="liquibase.rollbackCount" value="${rollback-with-count.count}"/>
		         </antcall>
		      </sequential>
		    </for>
		
		  </target>	
	
		<target name="-rollback-with-count-staging-core">
			    <fail unless="rollback-with-count.command">rollback-with-count.command is not set</fail>
				<fail unless="rollback-with-count.count">rollback-with-count.count is not set</fail>
			
			    <!-- constants get installed in system and catfeed -->
			    <for list="stage-core-db" param="liquibase.dbref">
			      <sequential>
			         <antcall target="${rollback-with-count.command}">
			            <param name="liquibase.changelog" value="master_core_oms_changelog.xml" />
			            <param name="liquibase.dbref" value="@{liquibase.dbref}" />
			         	<param name="liquibase.rollbackCount" value="${rollback-with-count.count}"/>
			         </antcall>
			      </sequential>
			    </for>
			
			  </target>	


</project>