$class=mff.returns.MFFRestReturnManager
$scope=global

prorateItemManager=/mff/commerce/prorate/ProrateItemManager
omsOrderRepository=/oms/commerce/order/OMSOrderRepository
settlementManager=/oms/commerce/settlement/SettlementManager

returnReasonToShipRefund=\
		changedMind=false,\
		giftNotWanted=false,\
		wrongItemOrdered=false,\
		wrongSizeOrdered=false,\
		notAsPictured=true,\
		qualityNotAsExpected=false,\
		damagedInShipping=true,\
		defective=true,\
		wrongItemShipped=true,\
		returnVoid=true,\
		refusedUndeliverable=true

returnReasonToDispCode=\
		changedMind=returnToGoodStock,\
		giftNotWanted=returnToGoodStock,\
		wrongItemOrdered=returnToGoodStock,\
		wrongSizeOrdered=returnToGoodStock,\
		notAsPictured=returnToGoodStock,\
		qualityNotAsExpected=returnToGoodStock,\
		damagedInShipping=returnToScrap,\
		defective=returnToScrap,\
		wrongItemShipped=returnToGoodStock,\
		returnVoid=returnToGoodStock,\
		refusedUndeliverable=returnToGoodStock

orderManager=/oms/commerce/order/OMSOrderManager
paymentGroupManager=/oms/commerce/order/OMSPaymentGroupManager
defaultReturnReason=changedMind
posReasonCodeMap=\
	changedMind=changedMind,\
	giftNotWanted=giftNotWanted,\
	wrongItemOrdered=wrongItemOrdered,\
	wrongSizeOrdered=wrongSizeOrdered,\
	notAsPictured=notAsPictured,\
	qualityNotAsExpected=qualityNotAsExpected,\
	damagedInShipping=damagedInShipping,\
	wrongItemShipped=wrongItemShipped,\
	returnVoid=returnVoid,\
	refusedUndeliverable=refusedUndeliverable,\
	defective=defective
	
loggingDebug=false

returnEventMessageSource=/atg/commerce/custsvc/returns/ReturnEventMessageSource
claimableManager=/atg/commerce/claimable/ClaimableManager
commerceItemManager=/atg/commerce/order/CommerceItemManager
inventoryManager=/atg/commerce/inventory/InventoryManager

orderQueries=/atg/commerce/order/OrderQueries
paymentManager=/atg/commerce/payment/PaymentManager
returnStates=/atg/commerce/custsvc/returns/ReturnStates
returnTools=/atg/commerce/custsvc/returns/ReturnTools
returnItemStates=/atg/commerce/custsvc/returns/ReturnItemStates
rmaNameSpace=RMA
shippingGroupManager=/atg/commerce/order/ShippingGroupManager

profileRepository=/atg/userprofiling/ProfileAdapterRepository
transactionManager=/atg/dynamo/transaction/TransactionManager
pricingTools=/atg/commerce/pricing/PricingTools
chargeFullReplacementAmount=true
orderStates=/atg/commerce/states/OrderStates
pendingCustomerReturnOrderState=PENDING_CUSTOMER_RETURN
storeCreditType=storeCredit
creditCardType=creditCard
giftCertificateType=giftCertificate
defaultReturnFee=0.0
processImmediately=false

paymentGroupCopyManager=/atg/commerce/custsvc/returns/PaymentGroupCopyManager


##Currently the exchange order is created only Using Contact Center or CSC, thus setting to contactCenter.
salesChannel=default

# the following two flags affect what CSC does about shipping refunds:
#
# doShippingRefunds determines if CSC calculates shipping refunds for 
# all returns or exchanges
#
# if calculating shipping refunds, initializeActualShippingRefund determines if the
# actual shipping refund amounts are initialized from the suggested values. This can be set to false
# on sites that want to calculate the suggested values so they are known 
# but don't provide a shipping refund by default. 

doShippingRefunds=true
initializeActualShippingRefund=true

#Flag to configure whether or not to include appeasements in the returns or exchanges refund validation.
#If TRUE the validation includes appeasements and will throw error if it exceeds the available balance.
#If FALSE an information message about the appeasements total made on this order will be displayed.
includeAppeasementsInValidation=false

cloneEditManager=/atg/commerce/custsvc/returns/CloneEditManager

# This configuration is used when cloning an exchange order to make copies of its
# items and shipping groups for the return adjusted order, and to clone the
# new exchange order to make copies of its items and shipping groups for the promotion
# evaluation order. 
#
# Everything is excluded except the items,
# shipping groups and relationships to optimize performance.
#

exchangeOrderExcludedProperties=\
  order=priceInfo|creationDate|createdByOrderId|originOfOrder|submittedDate|lastModifiedDate|taxPriceInfo|relatedOrders|specialInstructions|markers|manualAdjustments,\
  hardgoodShippingGroup=trackingNumber,\
  commerceItem=markers,\
  configurableCommerceItem=markers,\
  shippingGroup=priceInfo,\
  paymentGroup=paymentMethod|amount|amountAuthorized|amountDebited|amountCredited|currencyCode|state|stateDetail|submittedDate|specialInstructions|authorizationStatus|debitStatus|creditStatus,\
  itemPriceInfo=priceList,\
  pricingAdjustment=pricingModel
  

# pipeline used to create the return adjusted order
createReturnAdjustedOrderPipeline=createReturnAdjustedOrder
# pipeline used to create the return calculation order
createReturnCalculationOrderPipeline=createReturnCalculationOrder
# pipeline used to create the promotion evaluation order
createPromotionEvaluationOrderPipeline=createPromotionEvaluationOrder

# pipeline used to create a new return request
createReturnRequestPipelineChainId=createReturnRequest
# pipeline used to confirm a new return request
confirmReturnRequestPipelineChainId=confirmReturnRequest
# pipeline used to settle a return request
settleReturnRequestPipelineChainId=settleReturn
# pipeline used to receive return merchandise for a return request
receiveItemPipelineChainId=recordMerchandiseReturn
# pipeline used to allocation the refund of a return request
applyRefundAllocationsPipelineChainId=applyRefundAllocations
# pipeline used to select items for return
applySelectedItemsPipelineChainId=applySelectedItems
# pipeline used to calculate the refund amounts for a return
calculateRefundAmountsPipelineChainId=calculateRefundAmounts
# pipeline used to create the replacement order for an exchange
generateReplacementOrderPipelineChainId=generateReplacementOrderForExchange
# pipeline used to submit the replacement order for an exchange
submitReplacementOrderPipelineChainId=submitReplacementOrderToFulfillment

processImmediately^=/atg/commerce/custsvc/util/CSRConfigurator.processReturnRequestImmediately

salesChannel=contactCenter
exchangeOrderExcludedProperties+=\
  pricingAdjustment=coupon|pricingModel
