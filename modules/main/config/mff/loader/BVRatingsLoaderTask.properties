$class=mff.loader.FeedLoaderTask
$scope=global

# Flag to turn on/off task
enable=false

# SFTP related properties
# These need to be defined only if we have
# downloadFeedsFromSFTP set to true

# SFTP client component
#sftpClient=/mff/util/ftp/FacetSFTPClient

# Remote SFTP directory
remoteDir=/Facet

# Local dir where files from SFTP will be downloaded to
localDir=/vagrant/feeds/xml/facets

# Prefix of files that we should pick up for processing
# Applies both to FTP directory and local directory
filePrefix=bv_fleetfarm_ratings

# Main stored proc that handles all of the import
# processing logic
storedProcName={call mff_bvreviews_loader.run(?)}

# stored proce handling archival
archiveStoredProcName={call mff_bvreviews_loader.archive_files(?,?)}

# stored proc handling deletion of feeds
deleteStoredProcName={call mff_bvreviews_loader.delete_files(?,?)}

# Flag to delete feeds instead of archiving
deleteFeeds=false

# Connection to the CATFEED schema
feedDataSource=/atg/dynamo/service/jdbc/DirectJTDataSource_catfeed

taskName=BV ratings Import

# Unique job code/message to be used
# for logging messages
jobErrorCode=MFF_U7000_CRITICAL_CODE
jobErrorMsg=MFF_U7000_CRITICAL_MSG

# Logger service
logger=/mff/logging/Logger

# Component that deals with repo cache invalidation
cacheInvalidator=/mff/services/cache/TargetCacheInvalidatorRemoteHelper

# specifies if we should download feeds from SFTP location
downloadFeedsFromSFTP=false

invalidateCaches=false

# JNDI uri to pricelists repo.. used for cache invalidation
repoJNDIUri=atgrep:/ProductCatalog/product/

tableName=tmp_bvreviews_data

# Email Configs
notificationEmailList=cgopalan@dminc.com
notificationEmailFromAddress=no.reply@fleetfarm.com
disableEmail=false
runServer=localhost